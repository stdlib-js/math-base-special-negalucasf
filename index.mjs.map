{"version":3,"file":"index.mjs","sources":["../lib/main.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2024 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isnanf from '@stdlib/math-base-assert-is-nanf';\nimport isIntegerf from '@stdlib/math-base-assert-is-integerf';\nimport absf from '@stdlib/math-base-special-absf';\nimport NEGALUCAS from './negalucas.json';\n\n\n// VARIABLES //\n\nvar MAX_LUCAS = 34;\n\n\n// MAIN //\n\n/**\n* Computes the nth negalucas number in single-precision floating-point format.\n*\n* @param {NonPositiveInteger} n - the negalucas number to compute\n* @returns {integer} negalucas number\n*\n* @example\n* var y = negalucasf( 0 );\n* // returns 2\n*\n* @example\n* var y = negalucasf( -1 );\n* // returns -1\n*\n* @example\n* var y = negalucasf( -2 );\n* // returns 3\n*\n* @example\n* var y = negalucasf( -3 );\n* // returns -4\n*\n* @example\n* var y = negalucasf( -4 );\n* // returns 7\n*\n* @example\n* var y = negalucasf( -5 );\n* // returns -11\n*\n* @example\n* var y = negalucasf( -6 );\n* // returns 18\n*\n* @example\n* var y = negalucasf( NaN );\n* // returns NaN\n*\n* @example\n* var y = negalucasf( -3.14 );\n* // returns NaN\n*/\nfunction negalucasf( n ) {\n\tvar an;\n\tif (\n\t\tisnanf( n ) ||\n\t\tisIntegerf( n ) === false ||\n\t\tn > 0\n\t) {\n\t\treturn NaN;\n\t}\n\tan = absf( n );\n\tif ( an > MAX_LUCAS ) {\n\t\treturn NaN;\n\t}\n\treturn NEGALUCAS[ an ];\n}\n\n\n// EXPORTS //\n\nexport default negalucasf;\n"],"names":["negalucasf","n","an","isnanf","isIntegerf","absf","NaN","NEGALUCAS"],"mappings":";;+eA6EA,SAASA,EAAYC,GACpB,IAAIC,EACJ,OACCC,EAAQF,KACY,IAApBG,EAAYH,IACZA,EAAI,IAILC,EAAKG,EAAMJ,IAxDI,GAsDPK,IAMDC,EAAWL,EACnB"}